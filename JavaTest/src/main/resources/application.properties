#server.port=8080
#server.session.timeout=10
#server.tomcat.uri-encoding=utf8

#retired
#security.basic.enabled=true
#server.servlet.session.timeout=60

###################### h2 ########################
spring.h2.console.enabled=true
spring.h2.console.path=/h2
#spring.h2.console.settings.trace=true
spring.h2.console.settings.web-allow-others=true

###################### datasource ########################
spring.datasource.url=jdbc\:h2\:file\:..\\database\\testdb;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.url = jdbc:h2:file:~/.h2/testdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver

###################### hibernate ########################
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

#=====================================  log  =============================
#logging.config=classpath:logback-boot.xml
#spring.data.mongodb.uri= mongodb://localhost:27017/xzy
logging.level.org.hibernate=ERROR

#download the certificate from ssl provider, maybe aliyun, tencent cloud...
#server.ssl.key-store:classpath:xxx.pfx
#the password in pfx-password.txt
#server.ssl.key-store-password:xxxxxxx
#server.ssl.keyStoreType:PKCS12

spring.http.encoding.force=true
spring.http.encoding.charset=utf-8
spring.http.encoding.enabled=true